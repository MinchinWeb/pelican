language: sh
matrix:
  include:
  - os: linux
    python: 3.5
    env: TOX_ENV=docs
    before_install:
      - sudo apt-get install python3.5
      - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - python3.5 get-pip.py --user
      - python3.5 -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

  - os: linux
    python: 3.5
    env: TOX_ENV=flake8
    before_install:
      - sudo apt-get install python3.5
      - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - python3.5 get-pip.py --user
      - python3.5 -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

  - os: linux
    python: 2.7
    env: TOX_ENV=py27
    before_install:
      - sudo apt-get install python2.7
      - python -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

  - os: linux
    python: 3.4
    env: TOX_ENV=py34
    before_install:
      - sudo apt-get install python3.4
      - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - python3.4 get-pip.py --user
      - python3.4 -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

  - os: linux
    python: 3.5
    env: TOX_ENV=py35
    before_install:
      - sudo apt-get install python3.5
      - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - python3.5 get-pip.py --user
      - python3.5 -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

  - os: linux
    python: 3.6
    env: TOX_ENV=py36
    before_install:
      - sudo add-apt-repository ppa:deadsnakes/ppa -y
      - sudo apt-get update
      - sudo apt-get install python3.6
      - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - python3.6 get-pip.py --user
      - python3.6 -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

  - os: linux
    python: 3.7
    env: TOX_ENV=py37
    dist: xenial  # required for the SSL library needed to download pip
    before_install:
      - sudo add-apt-repository ppa:deadsnakes/ppa -y
      - sudo apt-get update
      - sudo apt-get install python3.7
      - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
      - python3.7 get-pip.py --user
      - python3.7 -m pip install virtualenv --user
      - virtualenv venv
      - source venv/bin/activate
      - python -m pip install --upgrade pip wheel
      - pip --version
      - python -m pip install -r requirements/test.pip
      - python -m pip install nose nose-cov coveralls pygments==2.1.3
      - sudo apt-get update -qq
      - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8
    install:
      - python -m pip install .
    script:
      - nosetests -sv --with-coverage --cover-package=pelican pelican


  - os: windows
    env: TOX_ENV=py27-win
    before_install:
      - choco install pandoc
      - choco install python --version 2.7.11
      - export PATH="/c/tools/Python:/c/tools/python/Scripts:$PATH"
      - python --version
      - python -m pip install --upgrade pip wheel
      - python -m pip install -r requirements/test.pip
      - python -m pip install nose nose-cov coveralls pygments==2.1.3
    install:
      - python -m pip install .
    script:
      - nosetests -sv --with-coverage --cover-package=pelican pelican

  - os: windows
    env: TOX_ENV=py34-win
    before_install:
      - choco install pandoc
      - choco install python --version 3.4.4
      - export PATH="/c/Python34:/c/Python34/Scripts:$PATH"
      - python --version
      - python -m pip install --upgrade pip wheel
      - python -m pip install -r requirements/test.pip
      - python -m pip install nose nose-cov coveralls pygments==2.1.3
    install:
      - python -m pip install .
    script:
      - nosetests -sv --with-coverage --cover-package=pelican pelican

  - os: windows
    env: TOX_ENV=py35-win
    before_install:
      - choco install pandoc
      - choco install python --version 3.5.4
      - export PATH="/c/Python35:/c/Python35/Scripts:$PATH"
      - python --version
      - python -m pip install --upgrade pip wheel
      - python -m pip install -r requirements/test.pip
      - python -m pip install nose nose-cov coveralls pygments==2.1.3
    install:
      - python -m pip install .
    script:
      - nosetests -sv --with-coverage --cover-package=pelican pelican

  - os: windows
    env: TOX_ENV=py36-win
    before_install:
      - choco install pandoc
      - choco install python --version 3.6.7
      - export PATH="/c/Python36:/c/Python36/Scripts:$PATH"
      - python --version
      - python -m pip install --upgrade pip wheel
      - python -m pip install -r requirements/test.pip
      - python -m pip install nose nose-cov coveralls pygments==2.1.3
    install:
      - python -m pip install .
    script:
      - nosetests -sv --with-coverage --cover-package=pelican pelican

  - os: windows
    env: TOX_ENV=py37-win
    before_install:
      - choco install pandoc
      - choco install python --version 3.7.1
      - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
      - python --version
      - python -m pip install --upgrade pip wheel
      - python -m pip install -r requirements/test.pip
      - python -m pip install nose nose-cov coveralls pygments==2.1.3
    install:
      - python -m pip install .
    script:
      - nosetests -sv --with-coverage --cover-package=pelican pelican

  allow_failures:
  - os: windows


apt_packages:
  - pandoc

  # used by matrix options where these keys aren't re-defined
install:
  - pip install tox==2.5.0
script:
  - tox -e $TOX_ENV
after_script:
  - coveralls

notifications:
  irc:
    channels:
      - "irc.freenode.org#pelican"
    on_success: change
