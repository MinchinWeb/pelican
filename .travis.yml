language: sh
dist: xenial  # required for the SSL library needed to download pip for Python 3.7

matrix:
  os:
    - linux
    - windows
  env:
    - TOX_ENV=docs
    - TOX_ENV=flake8
    - TOX_ENV=py27
    - TOX_ENV=py34
    - TOX_ENV=py35
    - TOX_ENV=py36
    - TOX_ENV=py37

allow_failures:
  - os: windows

apt_packages:
  - pandoc

notifications:
  irc:
    channels:
      - "irc.freenode.org#pelican"
    on_success: change

jobs:
  include:
    - stage: locale
      name: "Install Locales"
      script:
        - sudo apt-get update -qq
        - sudo locale-gen fr_FR.UTF-8 tr_TR.UTF-8

    - stage: pandoc_win
      name: "Install pandoc"
      if: os = win
      script:
        - choco install pandoc

    - stage: py27_linux
      name: "Install Python"
      if: (os = linux) AND (env(TOX_ENV) = py27)
      script:
        - sudo apt-get install python2.7
        - export PY_EXE = "python"

    - stage: py34_linux
      name: "Install Python"
      if: (os = linux) AND (env(TOX_ENV) = py34)
      script:
        - sudo apt-get install python3.4
        - export PY_EXE = "python3.4"

    - stage: py35_linux
      name: "Install Python"
      if: (os = linux) AND (env(TOX_ENV) IN (py35, docs, flake8))
      script:
        - sudo apt-get install python3.5
        - export PY_EXE = "python3.5"

    - stage: py36_linux
      name: "Install Python"
      if: (os = linux) AND (env(TOX_ENV) = py36)
      script:
        - sudo add-apt-repository ppa:deadsnakes/ppa -y
        - sudo apt-get update
        - sudo apt-get install python3.6
        - export PY_EXE = "python3.6"

    - stage: py37_linux
      name: "Install Python"
      if: (os = linux) AND (env(TOX_ENV) = py37)
      script:
        - sudo add-apt-repository ppa:deadsnakes/ppa -y
        - sudo apt-get update
        - sudo apt-get install python3.7
        - export PY_EXE = "python3.7"

    - stage: py27_win
      name: "Install Python"
      if: (os = windows) AND (env(TOX_ENV) = py27)
      script:
        - choco install python --version 2.7.11
        - export PATH="/c/tools/Python:/c/tools/python/Scripts:$PATH"

    - stage: py34_win
      name: "Install Python"
      if: (os = windows) AND (env(TOX_ENV) = py34)
      script:
        - choco install python --version 3.4.4
        - export PATH="/c/Python34:/c/Python34/Scripts:$PATH"

    - stage: py35_win
      name: "Install Python"
      if: (os = windows) AND (env(TOX_ENV) = py35)
      script:
        - choco install python --version 3.5.4
        - export PATH="/c/Python35:/c/Python35/Scripts:$PATH"

    - stage: py36_win
      name: "Install Python"
      if: (os = windows) AND (env(TOX_ENV) = py36)
      script:
        - choco install python --version 3.6.7
        - export PATH="/c/Python36:/c/Python36/Scripts:$PATH"

    - stage: py37_win
      name: "Install Python"
      if: (os = windows) AND (env(TOX_ENV) = py37)
      script:
        - choco install python --version 3.7.1
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"

    - stage: py_exe_win
      name: "Set Python exe on Windows"
      if: os = windows
      script:
        - export PY_EXE="python"

    - stage: py_version
      name: "What Python Version?"
      script:
        - $PY_EXE --version

    - stage: bootstrap_pip
      name: "Bootstrap pip"
      if: (os = linux) AND (env(TOX_ENV) in (py34, py35, py36, py37))
      script:
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - $PY_EXE get-pip.py --user
    
    - stage: virtualenv
      name: "Activate Virtual Environment"
      if: (os = linux)
      scirpt:
        - $PY_EXE -m pip install virtualenv --user
        - virutalenv venv
        - source venv/bin/activate

    - stage: requirements
      name: "Install Python Requirements"
      script:
        - python -m pip install --upgrade pip wheel
        - pip --version
        - pip install tox==2.5.0
        - python -m pip install -r requirements/test.pip
        - python -m pip install nose nose-cov coveralls pygments==2.1.3
    
    - stage: install
      name: "Pelican Install"
      scirpt:
        - python -m pip install .
    
    - stage: test
      name: "Tests"
      script:
        - tox -e $TOX_ENV

    - stage: upload_coveralls
      name: "Upload Coveralls Report"
      script:
        - coveralls
